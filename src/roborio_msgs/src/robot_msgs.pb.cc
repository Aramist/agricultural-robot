// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_msgs.proto

#include "../include/roborio_msgs/robot_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace proto {
class DifferentialDriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DifferentialDrive>
      _instance;
} _DifferentialDrive_default_instance_;
class EncoderPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncoderPair>
      _instance;
} _EncoderPair_default_instance_;
class XYTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XYTable>
      _instance;
} _XYTable_default_instance_;
class IMUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMU>
      _instance;
} _IMU_default_instance_;
class JoyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Joy>
      _instance;
} _Joy_default_instance_;
}  // namespace proto
namespace protobuf_robot_5fmsgs_2eproto {
static void InitDefaultsDifferentialDrive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_DifferentialDrive_default_instance_;
    new (ptr) ::proto::DifferentialDrive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::DifferentialDrive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DifferentialDrive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDifferentialDrive}, {}};

static void InitDefaultsEncoderPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_EncoderPair_default_instance_;
    new (ptr) ::proto::EncoderPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::EncoderPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncoderPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncoderPair}, {}};

static void InitDefaultsXYTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_XYTable_default_instance_;
    new (ptr) ::proto::XYTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::XYTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XYTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXYTable}, {}};

static void InitDefaultsIMU() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_IMU_default_instance_;
    new (ptr) ::proto::IMU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::IMU::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMU =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMU}, {}};

static void InitDefaultsJoy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Joy_default_instance_;
    new (ptr) ::proto::Joy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Joy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Joy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoy}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DifferentialDrive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncoderPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XYTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMU.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Joy.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DifferentialDrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DifferentialDrive, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DifferentialDrive, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DifferentialDrive, right_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::EncoderPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::EncoderPair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::EncoderPair, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::EncoderPair, right_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::XYTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::XYTable, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::XYTable, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawaccelx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawaccely_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawaccelz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawgyrox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawgyroy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::IMU, rawgyroz_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Joy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Joy, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Joy, axes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Joy, buttons_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::DifferentialDrive)},
  { 8, -1, sizeof(::proto::EncoderPair)},
  { 16, -1, sizeof(::proto::XYTable)},
  { 23, -1, sizeof(::proto::IMU)},
  { 35, -1, sizeof(::proto::Joy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_DifferentialDrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_EncoderPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_XYTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_IMU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Joy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "robot_msgs.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020robot_msgs.proto\022\005proto\">\n\021Differentia"
      "lDrive\022\014\n\004name\030\003 \001(\t\022\014\n\004left\030\001 \001(\001\022\r\n\005ri"
      "ght\030\002 \001(\001\"8\n\013EncoderPair\022\014\n\004name\030\003 \001(\t\022\014"
      "\n\004left\030\001 \001(\021\022\r\n\005right\030\002 \001(\021\"\037\n\007XYTable\022\t"
      "\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\"\202\001\n\003IMU\022\014\n\004name\030\007 \001"
      "(\t\022\021\n\trawAccelX\030\001 \001(\002\022\021\n\trawAccelY\030\002 \001(\002"
      "\022\021\n\trawAccelZ\030\003 \001(\002\022\020\n\010rawGyroX\030\004 \001(\002\022\020\n"
      "\010rawGyroY\030\005 \001(\002\022\020\n\010rawGyroZ\030\006 \001(\002\"2\n\003Joy"
      "\022\014\n\004name\030\003 \001(\t\022\014\n\004axes\030\001 \003(\002\022\017\n\007buttons\030"
      "\002 \003(\rB&\n$org.usfirst.frc.team5472.robot."
      "protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robot_msgs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_robot_5fmsgs_2eproto
namespace proto {

// ===================================================================

void DifferentialDrive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DifferentialDrive::kNameFieldNumber;
const int DifferentialDrive::kLeftFieldNumber;
const int DifferentialDrive::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DifferentialDrive::DifferentialDrive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_robot_5fmsgs_2eproto::scc_info_DifferentialDrive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DifferentialDrive)
}
DifferentialDrive::DifferentialDrive(const DifferentialDrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_) -
    reinterpret_cast<char*>(&left_)) + sizeof(right_));
  // @@protoc_insertion_point(copy_constructor:proto.DifferentialDrive)
}

void DifferentialDrive::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&left_)) + sizeof(right_));
}

DifferentialDrive::~DifferentialDrive() {
  // @@protoc_insertion_point(destructor:proto.DifferentialDrive)
  SharedDtor();
}

void DifferentialDrive::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DifferentialDrive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DifferentialDrive::descriptor() {
  ::protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DifferentialDrive& DifferentialDrive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_robot_5fmsgs_2eproto::scc_info_DifferentialDrive.base);
  return *internal_default_instance();
}


void DifferentialDrive::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DifferentialDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&left_)) + sizeof(right_));
  _internal_metadata_.Clear();
}

bool DifferentialDrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DifferentialDrive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DifferentialDrive.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DifferentialDrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DifferentialDrive)
  return false;
#undef DO_
}

void DifferentialDrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DifferentialDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->left(), output);
  }

  // double right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->right(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DifferentialDrive.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DifferentialDrive)
}

::google::protobuf::uint8* DifferentialDrive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DifferentialDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->left(), target);
  }

  // double right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->right(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DifferentialDrive.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DifferentialDrive)
  return target;
}

size_t DifferentialDrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DifferentialDrive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double left = 1;
  if (this->left() != 0) {
    total_size += 1 + 8;
  }

  // double right = 2;
  if (this->right() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DifferentialDrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DifferentialDrive)
  GOOGLE_DCHECK_NE(&from, this);
  const DifferentialDrive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DifferentialDrive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DifferentialDrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DifferentialDrive)
    MergeFrom(*source);
  }
}

void DifferentialDrive::MergeFrom(const DifferentialDrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DifferentialDrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
}

void DifferentialDrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DifferentialDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DifferentialDrive::CopyFrom(const DifferentialDrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DifferentialDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DifferentialDrive::IsInitialized() const {
  return true;
}

void DifferentialDrive::Swap(DifferentialDrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DifferentialDrive::InternalSwap(DifferentialDrive* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(left_, other->left_);
  swap(right_, other->right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DifferentialDrive::GetMetadata() const {
  protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EncoderPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncoderPair::kNameFieldNumber;
const int EncoderPair::kLeftFieldNumber;
const int EncoderPair::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncoderPair::EncoderPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_robot_5fmsgs_2eproto::scc_info_EncoderPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EncoderPair)
}
EncoderPair::EncoderPair(const EncoderPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_) -
    reinterpret_cast<char*>(&left_)) + sizeof(right_));
  // @@protoc_insertion_point(copy_constructor:proto.EncoderPair)
}

void EncoderPair::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&left_)) + sizeof(right_));
}

EncoderPair::~EncoderPair() {
  // @@protoc_insertion_point(destructor:proto.EncoderPair)
  SharedDtor();
}

void EncoderPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncoderPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EncoderPair::descriptor() {
  ::protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EncoderPair& EncoderPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_robot_5fmsgs_2eproto::scc_info_EncoderPair.base);
  return *internal_default_instance();
}


void EncoderPair::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EncoderPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&left_)) + sizeof(right_));
  _internal_metadata_.Clear();
}

bool EncoderPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EncoderPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.EncoderPair.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EncoderPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EncoderPair)
  return false;
#undef DO_
}

void EncoderPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EncoderPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->left(), output);
  }

  // sint32 right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->right(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.EncoderPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EncoderPair)
}

::google::protobuf::uint8* EncoderPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EncoderPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->left(), target);
  }

  // sint32 right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->right(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.EncoderPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EncoderPair)
  return target;
}

size_t EncoderPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EncoderPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // sint32 left = 1;
  if (this->left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->left());
  }

  // sint32 right = 2;
  if (this->right() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->right());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncoderPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EncoderPair)
  GOOGLE_DCHECK_NE(&from, this);
  const EncoderPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EncoderPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EncoderPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EncoderPair)
    MergeFrom(*source);
  }
}

void EncoderPair::MergeFrom(const EncoderPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EncoderPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
}

void EncoderPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EncoderPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncoderPair::CopyFrom(const EncoderPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EncoderPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncoderPair::IsInitialized() const {
  return true;
}

void EncoderPair::Swap(EncoderPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncoderPair::InternalSwap(EncoderPair* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(left_, other->left_);
  swap(right_, other->right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EncoderPair::GetMetadata() const {
  protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XYTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XYTable::kXFieldNumber;
const int XYTable::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XYTable::XYTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_robot_5fmsgs_2eproto::scc_info_XYTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.XYTable)
}
XYTable::XYTable(const XYTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:proto.XYTable)
}

void XYTable::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

XYTable::~XYTable() {
  // @@protoc_insertion_point(destructor:proto.XYTable)
  SharedDtor();
}

void XYTable::SharedDtor() {
}

void XYTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XYTable::descriptor() {
  ::protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XYTable& XYTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_robot_5fmsgs_2eproto::scc_info_XYTable.base);
  return *internal_default_instance();
}


void XYTable::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.XYTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool XYTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.XYTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.XYTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.XYTable)
  return false;
#undef DO_
}

void XYTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.XYTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.XYTable)
}

::google::protobuf::uint8* XYTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.XYTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.XYTable)
  return target;
}

size_t XYTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.XYTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XYTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.XYTable)
  GOOGLE_DCHECK_NE(&from, this);
  const XYTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XYTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.XYTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.XYTable)
    MergeFrom(*source);
  }
}

void XYTable::MergeFrom(const XYTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.XYTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void XYTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.XYTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XYTable::CopyFrom(const XYTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.XYTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XYTable::IsInitialized() const {
  return true;
}

void XYTable::Swap(XYTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XYTable::InternalSwap(XYTable* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XYTable::GetMetadata() const {
  protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMU::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMU::kNameFieldNumber;
const int IMU::kRawAccelXFieldNumber;
const int IMU::kRawAccelYFieldNumber;
const int IMU::kRawAccelZFieldNumber;
const int IMU::kRawGyroXFieldNumber;
const int IMU::kRawGyroYFieldNumber;
const int IMU::kRawGyroZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMU::IMU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_robot_5fmsgs_2eproto::scc_info_IMU.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.IMU)
}
IMU::IMU(const IMU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&rawaccelx_, &from.rawaccelx_,
    static_cast<size_t>(reinterpret_cast<char*>(&rawgyroz_) -
    reinterpret_cast<char*>(&rawaccelx_)) + sizeof(rawgyroz_));
  // @@protoc_insertion_point(copy_constructor:proto.IMU)
}

void IMU::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rawaccelx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rawgyroz_) -
      reinterpret_cast<char*>(&rawaccelx_)) + sizeof(rawgyroz_));
}

IMU::~IMU() {
  // @@protoc_insertion_point(destructor:proto.IMU)
  SharedDtor();
}

void IMU::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IMU::descriptor() {
  ::protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMU& IMU::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_robot_5fmsgs_2eproto::scc_info_IMU.base);
  return *internal_default_instance();
}


void IMU::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.IMU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rawaccelx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rawgyroz_) -
      reinterpret_cast<char*>(&rawaccelx_)) + sizeof(rawgyroz_));
  _internal_metadata_.Clear();
}

bool IMU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.IMU)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float rawAccelX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawaccelx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rawAccelY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawaccely_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rawAccelZ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawaccelz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rawGyroX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawgyrox_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rawGyroY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawgyroy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rawGyroZ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rawgyroz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.IMU.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.IMU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.IMU)
  return false;
#undef DO_
}

void IMU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.IMU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rawAccelX = 1;
  if (this->rawaccelx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rawaccelx(), output);
  }

  // float rawAccelY = 2;
  if (this->rawaccely() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rawaccely(), output);
  }

  // float rawAccelZ = 3;
  if (this->rawaccelz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rawaccelz(), output);
  }

  // float rawGyroX = 4;
  if (this->rawgyrox() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rawgyrox(), output);
  }

  // float rawGyroY = 5;
  if (this->rawgyroy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rawgyroy(), output);
  }

  // float rawGyroZ = 6;
  if (this->rawgyroz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->rawgyroz(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.IMU.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.IMU)
}

::google::protobuf::uint8* IMU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.IMU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rawAccelX = 1;
  if (this->rawaccelx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rawaccelx(), target);
  }

  // float rawAccelY = 2;
  if (this->rawaccely() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rawaccely(), target);
  }

  // float rawAccelZ = 3;
  if (this->rawaccelz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rawaccelz(), target);
  }

  // float rawGyroX = 4;
  if (this->rawgyrox() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rawgyrox(), target);
  }

  // float rawGyroY = 5;
  if (this->rawgyroy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rawgyroy(), target);
  }

  // float rawGyroZ = 6;
  if (this->rawgyroz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->rawgyroz(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.IMU.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.IMU)
  return target;
}

size_t IMU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.IMU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float rawAccelX = 1;
  if (this->rawaccelx() != 0) {
    total_size += 1 + 4;
  }

  // float rawAccelY = 2;
  if (this->rawaccely() != 0) {
    total_size += 1 + 4;
  }

  // float rawAccelZ = 3;
  if (this->rawaccelz() != 0) {
    total_size += 1 + 4;
  }

  // float rawGyroX = 4;
  if (this->rawgyrox() != 0) {
    total_size += 1 + 4;
  }

  // float rawGyroY = 5;
  if (this->rawgyroy() != 0) {
    total_size += 1 + 4;
  }

  // float rawGyroZ = 6;
  if (this->rawgyroz() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.IMU)
  GOOGLE_DCHECK_NE(&from, this);
  const IMU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.IMU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.IMU)
    MergeFrom(*source);
  }
}

void IMU::MergeFrom(const IMU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.IMU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rawaccelx() != 0) {
    set_rawaccelx(from.rawaccelx());
  }
  if (from.rawaccely() != 0) {
    set_rawaccely(from.rawaccely());
  }
  if (from.rawaccelz() != 0) {
    set_rawaccelz(from.rawaccelz());
  }
  if (from.rawgyrox() != 0) {
    set_rawgyrox(from.rawgyrox());
  }
  if (from.rawgyroy() != 0) {
    set_rawgyroy(from.rawgyroy());
  }
  if (from.rawgyroz() != 0) {
    set_rawgyroz(from.rawgyroz());
  }
}

void IMU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.IMU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMU::CopyFrom(const IMU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.IMU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMU::IsInitialized() const {
  return true;
}

void IMU::Swap(IMU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMU::InternalSwap(IMU* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rawaccelx_, other->rawaccelx_);
  swap(rawaccely_, other->rawaccely_);
  swap(rawaccelz_, other->rawaccelz_);
  swap(rawgyrox_, other->rawgyrox_);
  swap(rawgyroy_, other->rawgyroy_);
  swap(rawgyroz_, other->rawgyroz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IMU::GetMetadata() const {
  protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Joy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Joy::kNameFieldNumber;
const int Joy::kAxesFieldNumber;
const int Joy::kButtonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Joy::Joy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_robot_5fmsgs_2eproto::scc_info_Joy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Joy)
}
Joy::Joy(const Joy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      axes_(from.axes_),
      buttons_(from.buttons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.Joy)
}

void Joy::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Joy::~Joy() {
  // @@protoc_insertion_point(destructor:proto.Joy)
  SharedDtor();
}

void Joy::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Joy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Joy::descriptor() {
  ::protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Joy& Joy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_robot_5fmsgs_2eproto::scc_info_Joy.base);
  return *internal_default_instance();
}


void Joy::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Joy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  axes_.Clear();
  buttons_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Joy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Joy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float axes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_axes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_axes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 buttons = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buttons())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_buttons())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Joy.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Joy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Joy)
  return false;
#undef DO_
}

void Joy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Joy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float axes = 1;
  if (this->axes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _axes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->axes().data(), this->axes_size(), output);
  }

  // repeated uint32 buttons = 2;
  if (this->buttons_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buttons_cached_byte_size_));
  }
  for (int i = 0, n = this->buttons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->buttons(i), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Joy.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Joy)
}

::google::protobuf::uint8* Joy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Joy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float axes = 1;
  if (this->axes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _axes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->axes_, target);
  }

  // repeated uint32 buttons = 2;
  if (this->buttons_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _buttons_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->buttons_, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Joy.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Joy)
  return target;
}

size_t Joy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Joy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float axes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->axes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _axes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 buttons = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->buttons_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buttons_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Joy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Joy)
  GOOGLE_DCHECK_NE(&from, this);
  const Joy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Joy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Joy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Joy)
    MergeFrom(*source);
  }
}

void Joy::MergeFrom(const Joy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Joy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  axes_.MergeFrom(from.axes_);
  buttons_.MergeFrom(from.buttons_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Joy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Joy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Joy::CopyFrom(const Joy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Joy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Joy::IsInitialized() const {
  return true;
}

void Joy::Swap(Joy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Joy::InternalSwap(Joy* other) {
  using std::swap;
  axes_.InternalSwap(&other->axes_);
  buttons_.InternalSwap(&other->buttons_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Joy::GetMetadata() const {
  protobuf_robot_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_robot_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::DifferentialDrive* Arena::CreateMaybeMessage< ::proto::DifferentialDrive >(Arena* arena) {
  return Arena::CreateInternal< ::proto::DifferentialDrive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::EncoderPair* Arena::CreateMaybeMessage< ::proto::EncoderPair >(Arena* arena) {
  return Arena::CreateInternal< ::proto::EncoderPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::XYTable* Arena::CreateMaybeMessage< ::proto::XYTable >(Arena* arena) {
  return Arena::CreateInternal< ::proto::XYTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::IMU* Arena::CreateMaybeMessage< ::proto::IMU >(Arena* arena) {
  return Arena::CreateInternal< ::proto::IMU >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Joy* Arena::CreateMaybeMessage< ::proto::Joy >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Joy >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
