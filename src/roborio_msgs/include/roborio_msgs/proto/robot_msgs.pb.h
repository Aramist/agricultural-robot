// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agricultural-robot/src/roborio_msgs/proto/robot_msgs.proto

#ifndef PROTOBUF_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
void protobuf_AssignDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
void protobuf_ShutdownFile_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();

class DifferentialDrive;
class EncoderPair;
class XYTable;

// ===================================================================

class DifferentialDrive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DifferentialDrive) */ {
 public:
  DifferentialDrive();
  virtual ~DifferentialDrive();

  DifferentialDrive(const DifferentialDrive& from);

  inline DifferentialDrive& operator=(const DifferentialDrive& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DifferentialDrive& default_instance();

  void Swap(DifferentialDrive* other);

  // implements Message ----------------------------------------------

  inline DifferentialDrive* New() const { return New(NULL); }

  DifferentialDrive* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DifferentialDrive& from);
  void MergeFrom(const DifferentialDrive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DifferentialDrive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double left = 1;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  double left() const;
  void set_left(double value);

  // optional double right = 2;
  void clear_right();
  static const int kRightFieldNumber = 2;
  double right() const;
  void set_right(double value);

  // @@protoc_insertion_point(class_scope:DifferentialDrive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double left_;
  double right_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static DifferentialDrive* default_instance_;
};
// -------------------------------------------------------------------

class EncoderPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EncoderPair) */ {
 public:
  EncoderPair();
  virtual ~EncoderPair();

  EncoderPair(const EncoderPair& from);

  inline EncoderPair& operator=(const EncoderPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EncoderPair& default_instance();

  void Swap(EncoderPair* other);

  // implements Message ----------------------------------------------

  inline EncoderPair* New() const { return New(NULL); }

  EncoderPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EncoderPair& from);
  void MergeFrom(const EncoderPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EncoderPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional sint64 left = 1;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  ::google::protobuf::int64 left() const;
  void set_left(::google::protobuf::int64 value);

  // optional sint64 right = 2;
  void clear_right();
  static const int kRightFieldNumber = 2;
  ::google::protobuf::int64 right() const;
  void set_right(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:EncoderPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 left_;
  ::google::protobuf::int64 right_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static EncoderPair* default_instance_;
};
// -------------------------------------------------------------------

class XYTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XYTable) */ {
 public:
  XYTable();
  virtual ~XYTable();

  XYTable(const XYTable& from);

  inline XYTable& operator=(const XYTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XYTable& default_instance();

  void Swap(XYTable* other);

  // implements Message ----------------------------------------------

  inline XYTable* New() const { return New(NULL); }

  XYTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XYTable& from);
  void MergeFrom(const XYTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(XYTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::uint64 x() const;
  void set_x(::google::protobuf::uint64 value);

  // optional uint64 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::uint64 y() const;
  void set_y(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XYTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 x_;
  ::google::protobuf::uint64 y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static XYTable* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DifferentialDrive

// optional double left = 1;
inline void DifferentialDrive::clear_left() {
  left_ = 0;
}
inline double DifferentialDrive::left() const {
  // @@protoc_insertion_point(field_get:DifferentialDrive.left)
  return left_;
}
inline void DifferentialDrive::set_left(double value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:DifferentialDrive.left)
}

// optional double right = 2;
inline void DifferentialDrive::clear_right() {
  right_ = 0;
}
inline double DifferentialDrive::right() const {
  // @@protoc_insertion_point(field_get:DifferentialDrive.right)
  return right_;
}
inline void DifferentialDrive::set_right(double value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:DifferentialDrive.right)
}

// -------------------------------------------------------------------

// EncoderPair

// optional string name = 3;
inline void EncoderPair::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncoderPair::name() const {
  // @@protoc_insertion_point(field_get:EncoderPair.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncoderPair::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EncoderPair.name)
}
inline void EncoderPair::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EncoderPair.name)
}
inline void EncoderPair::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EncoderPair.name)
}
inline ::std::string* EncoderPair::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:EncoderPair.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncoderPair::release_name() {
  // @@protoc_insertion_point(field_release:EncoderPair.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncoderPair::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:EncoderPair.name)
}

// optional sint64 left = 1;
inline void EncoderPair::clear_left() {
  left_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EncoderPair::left() const {
  // @@protoc_insertion_point(field_get:EncoderPair.left)
  return left_;
}
inline void EncoderPair::set_left(::google::protobuf::int64 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:EncoderPair.left)
}

// optional sint64 right = 2;
inline void EncoderPair::clear_right() {
  right_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EncoderPair::right() const {
  // @@protoc_insertion_point(field_get:EncoderPair.right)
  return right_;
}
inline void EncoderPair::set_right(::google::protobuf::int64 value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:EncoderPair.right)
}

// -------------------------------------------------------------------

// XYTable

// optional uint64 x = 1;
inline void XYTable::clear_x() {
  x_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XYTable::x() const {
  // @@protoc_insertion_point(field_get:XYTable.x)
  return x_;
}
inline void XYTable::set_x(::google::protobuf::uint64 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:XYTable.x)
}

// optional uint64 y = 2;
inline void XYTable::clear_y() {
  y_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XYTable::y() const {
  // @@protoc_insertion_point(field_get:XYTable.y)
  return y_;
}
inline void XYTable::set_y(::google::protobuf::uint64 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:XYTable.y)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_agricultural_2drobot_2fsrc_2froborio_5fmsgs_2fproto_2frobot_5fmsgs_2eproto__INCLUDED
